# STEP 1: Unzip transit agency files

# Define the source directory 
src_dir <- "V:/CanALE/Data/GTFS/GTFS_2021"

# Define the destination directory where all unzipped folders will be organized by province
dest_dir <- "V:/CanALE/Data/GTFS/GTFS_2021/unzipped_files"

# Create the destination directory if it doesn't exist
if (!dir.exists(dest_dir)) {
  dir.create(dest_dir, recursive = TRUE)
}

# List all .zip files in the source directory and its subdirectories
zip_files <- list.files(path = src_dir, pattern = "\\.zip$", 
                        recursive = TRUE, full.names = TRUE)

if (length(zip_files) == 0) {
  message("No zip files found in the given directory.")
} else {
  for (zip_file in zip_files) {
    # Determine the province folder by assuming the structure:
    # GTFS_2021/Province/Date/SomeAgency.zip
    province <- basename(dirname(dirname(zip_file)))
    
    # Get the base name of the zip file without the .zip extension
    zip_name <- tools::file_path_sans_ext(basename(zip_file))
    
    # Create a destination folder in the format: dest_dir/Province/TransitAgency
    dest_subfolder <- file.path(dest_dir, province, zip_name)
    if (!dir.exists(dest_subfolder)) {
      dir.create(dest_subfolder, recursive = TRUE)
    }
    
    # Unzip the file into its designated subfolder
    unzip(zip_file, exdir = dest_subfolder)
    message("Extracted: ", basename(zip_file), " to folder: ", dest_subfolder)
  }
}



***
  
# STEP 2: Unzip transit agency files for CMAs

library(fs)

# Define the base destination directory (you can adjust this as needed)
# For example, using a shorter base path may also help avoid long path issues.
dest_dir <- "V:/CanALE/Data/GTFS/GTFS_2021/unzipped_files"

# Define the list of transit agency folder names that are considered to be in a CMA
cma_agencies <- list(
  AB = c("Strathcona County", "Calgary", "ETS", "St Albert"),
  BC = c("Victoria", "TransLink", "Kelowna", "Kamloops", "Nanaimo"),
  MB = c("Winnipeg"),
  NL = c("Metrobus"),
  NB = c("Codiac Transpo", "Saint John"),               
  NS = c("Saskatoon"),     # Example for Nova Scotia; change as appropriate
  PE = c(),                # Adjust if needed for Prince Edward Island
  ON = c("Barrie", "Gotransit-UpExpress", "Oakville", "Burlington", "Durham",
         "Gotransit", "GRT", "MiWay", "OC Transpo", "Greater Sudbury Transit",
         "YRT-Viva", "Guelph", "TTC", "Niagara", "Kingston", "Thunder Bay",
         "Windsor", "Brampton", "Hamilton Street Railway"),
  QC = c("AMT Trains GTFS", "MRC de Deux-Montagnes GTFS", "AMT Express GTFS",
         "CIT Sorel-Varennes GTFS", "Ville de Sainte-Julie GTFS", "CIT du Haut-Saint-Laurent GTFS",
         "RTL", "CIT La Presquile GTFS", "RTC_QCity", "CIT Vallee-du-Richelieu GTFS",
         "CRT Lanaudiere GTFS", "MRC les Moulins GTFS", "CIT Roussillon GTFS",
         "STM GTFS", "CIT Chambly-Richelieu-Carignan GTFS", "CIT Le Richelain GTFS",
         "CIT Sud-ouest GTFS", "CIT des Laurentides GTFS"),
  SK = c("Saskatoon")
)

# Loop over each province in the CMA list and copy the designated transit agency folders to a separate "_CMA" folder.
for (prov in names(cma_agencies)) {
  # Define the source directory for the province (where all unzipped transit agencies are stored)
  prov_source_dir <- file.path(dest_dir, prov)
  
  if (!dir_exists(prov_source_dir)) {
    message("Province folder not found: ", prov_source_dir, " - skipping...")
    next
  }
  
  # Create the CMA destination folder (e.g., "BC_CMA")
  cma_dest_dir <- file.path(dest_dir, paste0(prov, "_CMA"))
  if (!dir_exists(cma_dest_dir)) {
    dir_create(cma_dest_dir)
  }
  
  # List the immediate subdirectories (each represents a transit agency) in the province folder
  transit_agency_dirs <- list.dirs(prov_source_dir, recursive = FALSE, full.names = TRUE)
  
  # Loop over each transit agency folder
  for (agency_dir in transit_agency_dirs) {
    agency_name <- basename(agency_dir)
    # Check if this agency is designated as a CMA agency for this province.
    if (agency_name %in% cma_agencies[[prov]]) {
      # Define the destination path for the agency within the _CMA folder.
      dest_agency_dir <- file.path(cma_dest_dir, agency_name)
      
      # Remove any existing destination folder to ensure a fresh copy.
      if (dir_exists(dest_agency_dir)) {
        dir_delete(dest_agency_dir)
      }
      
      # Use fs::dir_copy to copy the directory and its contents.
      tryCatch({
        dir_copy(agency_dir, dest_agency_dir)
        message("Copied ", agency_name, " from ", prov, " to ", prov, "_CMA folder.")
      }, error = function(e) {
        warning("Failed to copy ", agency_name, " to ", prov, "_CMA folder. Error: ", e$message)
      })
    }
  }
}

